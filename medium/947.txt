class Solution {
    public int removeStones(int[][] stones) {
        Union union = new Union();
        for(int []s:stones){
            union.union(s[0] + 10000,s[1]);
        }
        return stones.length - union.getCount();
    }

}

//定义连接类
class Union{
    private int count;
    private Map<Integer,Integer>parent;
    public Union(){
        this.parent = new HashMap<>();
        this.count = 0;
    }
    public int getCount(){
        return count;
    }
//查找是否是同一并查集
    public int find(int x){
        if(!parent.containsKey(x)){
            parent.put(x,x);
            count++;
        }
        if(parent.get(x) != x){
            parent.put(x,find(parent.get(x)));
        }
        return parent.get(x);
    }
//连接并查集
    public void union(int x,int y){
        int Xnum = find(x);
        int Ynum = find(y);
        if(Xnum == Ynum){
            return ;
        }
        parent.put(Xnum,Ynum);
        count --;
    }

}